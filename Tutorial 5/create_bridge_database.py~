import osmium
import sqlite3

# Handler to extract bridge nodes
class BridgeNodeHandler(osmium.SimpleHandler):
    def __init__(self):
        super().__init__()
        self.bridge_nodes = []

    def node(self, n):
        if 'bridge' in n.tags and n.tags['bridge'] == 'yes':
            # Store node_id, latitude, and longitude
            self.bridge_nodes.append((n.id, n.location.lat, n.location.lon))

# Initialize the handler and apply it to the PBF file
handler = BridgeNodeHandler()
handler.apply_file('input.pbf')  # Replace with your .pbf file path

# Connect to SQLite database (or create it)
conn = sqlite3.connect('bridges.db')
cursor = conn.cursor()

# Create table for bridge nodes
cursor.execute('''
    CREATE TABLE IF NOT EXISTS bridge_nodes (
        node_id INTEGER PRIMARY KEY,
        latitude REAL,
        longitude REAL
    )
''')

# Insert bridge node data into the database
cursor.executemany('INSERT INTO bridge_nodes (node_id, latitude, longitude) VALUES (?, ?, ?)', handler.bridge_nodes)

# Commit and close the database connection
conn.commit()
conn.close()

print(f"Inserted {len(handler.bridge_nodes)} bridge nodes into the database.")
